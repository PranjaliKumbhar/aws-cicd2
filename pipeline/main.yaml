AWSTemplateFormatVersion: '2010-09-09'
Description: "codepipeline"


Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: codepipelineartinew1
      Tags:
        - Key: "Stack"
          Value: !Ref AWS::StackName
        - Key: "Project"
          Value: demo-cicd-codepipeline2
    
    #DeletionPolicy: Retain
  
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"


  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                  - "lambda:InvokeFunction"
                  - "lambda:ListFunctions"
                  - "lambda:InvokeAsyc"
                  - "codestar-connections:UseConnection"
                  - "cloudwatch:*"
                  - "s3:*"
                  - "codebuild:*"
                Resource: "*"
        - PolicyName: CodePipelineCodeAndArtifactsS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "s3:*"
                #a resource ID of S3 bucket created in the CloudFormation template
                Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
                
        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  #to get information about builds
                  - "codebuild:BatchGetBuilds"
                Resource:
                #a resource ID of codebuild created 
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildProject}"
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/demo-cicd-codepipeline2*/*"

        
  CodeBuildExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:*"
                  - "s3:*"
                  - "codebuild:*"
                  - "iam:*"
                Resource: "*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: demo-cicd-codepipeline2
      Description: first step
      ServiceRole: !GetAtt CodeBuildExecutionRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref S3Bucket
      Source:
        BuildSpec: pipeline/buildspec.yaml
        Type: CODEPIPELINE
      


  

  AppPipeline: 
    Type: AWS::CodePipeline::Pipeline 
    Properties: 
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
      Name: demo-cicd-codepipeline2
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: AWS 
                Version: 1 
                Provider: CodeStarSourceConnection
              OutputArtifacts: 
                - Name: SourceCodeAsZip
              Configuration: 
                FullRepositoryId: 'PranjaliKumbhar/aws-cicd2'
                BranchName: 'main'
                ConnectionArn: 'arn:aws:codestar-connections:us-east-1:349483170201:connection/d5d82e41-8e34-4b0f-a9eb-3fc49e8de6d1'
                OutputArtifactFormat: 'CODE_ZIP'
        - Name: Build
          Actions: 
            - Name: CodeBuild
              InputArtifacts: 
                - Name: SourceCodeAsZip
              ActionTypeId: 
                Category: Build
                Owner: AWS 
                Version: 1 
                Provider: CodeBuild
              Configuration: 
                ProjectName: !Ref CodeBuildProject
              OutputArtifacts:
                - Name: BuildArtifactAsZip


        
        




